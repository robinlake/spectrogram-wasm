[package]
name = "spectrogram-wasm"
version = "0.1.2"
authors = ["Robin Lake <robin@robinlake.ca>"]
edition = "2021"
wasm-opt = false

[package.metadata.wasm-pack.profile.dev]
wasm-opt = false

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.30"
cfg-if = "1"
winit = "0.27"
env_logger = "0.10"
wgpu = { version = "0.14", features = ["webgl"]}
pollster = "0.2"

[target.'cfg(target_arch = "wasm32")'.dependencies]
log = "0.4"
console_error_panic_hook = "0.1.6"
console_log = "0.2.0"


[dependencies.web-sys]
version = "0.3.4"
features = [
  'AnalyserNode',
  'AudioContext',
  'AudioDestinationNode',
  'AudioNode',
  'AudioParam',
  'GainNode',
  'MediaStreamAudioSourceNode',
  'MediaStream',
  'MediaStreamAudioSourceOptions',
  'OscillatorNode',
  'OscillatorType',
  'console',
  'Document',
  'Window',
  'Element',
]


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
